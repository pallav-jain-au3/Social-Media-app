{"version":3,"sources":["util/myButton.js","redux/actions/dataActions.js","redux/types.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","redux/actions/userActions.js","components/Profile/EditDetails.js","components/Profile/Profile.js","pages/home.js","pages/signup.js","pages/login.js","components/layout/Notifications.js","components/scream/PostScream.js","components/layout/Navbar.js","util/AuthRoute.js","redux/reducers/dataReducer.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/store.js","components/Profile/StaticProfile.js","pages/user.js","App.js","util/theme.js","serviceWorker.js","index.js"],"names":["children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","IconButton","clearErrors","dispatch","type","DeleteScream","handleOpen","setState","open","handleClose","deleteScream","props","screamId","state","this","color","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogActions","Button","Component","connect","disptach","console","log","axios","delete","then","payload","catch","err","LikeButton","likedScream","user","likes","find","like","likeScream","unlikeScream","authenticated","to","mapActionsToProps","get","res","data","Comments","classes","comments","Grid","container","map","comment","index","body","createdAt","userImage","userHandle","key","item","sm","src","alt","commentImage","commentData","Typography","variant","component","Link","dayjs","format","invisibleSeperator","length","visibleSeperator","withStyles","objectFit","borderRadius","height","marginLeft","widith","marginBottom","borderBottom","border","margin","CommentForm","componentWillReceiveProps","nextProp","UI","errors","handleSubmit","event","preventDefault","submitComment","handleChange","target","value","onSubmit","TextField","onChange","name","multiline","row","error","helperText","lable","placeholder","textField","button","post","response","mariginTop","ScreamDialog","oldPath","window","location","pathname","newPath","history","pushState","getScream","openDialog","scream","likeCount","commentCount","dialogMarkup","loading","spinnerDiv","CircularProgress","size","thickness","spacing","profileImage","expandButton","closeButton","DialogContent","dialogContent","padding","position","left","textAlign","marginTop","Scream","extend","relativeTime","handle","credentials","deleteButton","Card","card","CardMedia","image","CardContent","content","fromNow","display","minWidth","getUserData","logoutUser","localStorage","removeItem","defaults","headers","common","setAuthorizationToken","token","FBIdToken","setItem","EditDetails","mapUserCredentialsToSate","userDetails","bio","website","editUserDetails","placement","Edit","label","float","Profile","handleInputChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogoutClick","imgUrl","Paper","paper","profile","id","hidden","LocationOn","href","ref","CalendarToday","align","buttons","top","width","verticalAlign","cursor","home","getScreams","screams","recentScreamMarkup","xs","signup","e","newUserData","email","password","confirmPassword","signUpUser","nextProps","form","m","pageTitle","noValidate","general","customError","disabled","progress","userData","push","fontSize","login","loginUser","Notifications","anchorEl","onMenuOpened","notificationIds","notifications","filter","not","read","notificationId","markNotificationsRead","notificationIcon","Badge","badgeContent","notificationsMarkup","verb","time","iconColor","icon","style","MenuItem","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","Notification","propTypes","PropTypes","object","isRequired","array","PostScream","trim","newScream","postScream","submitButton","spinnerProgress","Navbar","handlePostScream","AppBar","Toolbar","rest","render","initialState","intialState","middleware","thunk","reducer","combineReducers","action","forEach","notification","findIndex","i","splice","indexOfState","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","StaticProfile","screamIdParam","match","params","getUserDetails","screamMarkup","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99eb7a22.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {IconButton} from \"@material-ui/core\";\r\nexport default ({children, onClick, tip, btnClassName, tipClassName}) => (\r\n\t<Tooltip title = {tip}  className = {tipClassName}>\r\n\t\t<IconButton onClick = {onClick} className = {btnClassName}>\r\n\t\t\t{children}\r\n\t\t</IconButton>\r\n\t</Tooltip>\r\n\t)\r\n","import {\r\n  SET_SCREAMS,\r\n  SET_SCREAM,\r\n  LOADING_DATA,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  DELETE_SCREAM,\r\n  LOADING_UI,\r\n  POST_SCREAM,\r\n  CLEAR_ERRORS,\r\n  SET_ERRORS,\r\n  STOP_LOADING,\r\n  SUBMIT_COMMENT\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getScreams = () => disptach => {\r\n  disptach({\r\n    type: LOADING_DATA\r\n  });\r\n\r\n  axios\r\n    .get(\r\n      \"https://us-central1-social-media-7f318.cloudfunctions.net/api/screams\"\r\n    )\r\n    .then(res => {\r\n      disptach({ type: SET_SCREAMS, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      disptach({\r\n        type: SET_SCREAMS,\r\n        payload: []\r\n      });\r\n    });\r\n};\r\n\r\nexport const postScream = newScream => disptach => {\r\n  disptach({ type: LOADING_UI });\r\n  axios\r\n    .post(\r\n      \"https://us-central1-social-media-7f318.cloudfunctions.net/api/screams\",\r\n      newScream\r\n    )\r\n    .then(res => {\r\n      disptach({\r\n        type: POST_SCREAM,\r\n        payload: res.data\r\n      });\r\n\r\n      disptach({\r\n        type: CLEAR_ERRORS\r\n      });\r\n    })\r\n    .catch(err => {\r\n      disptach({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\nexport const likeScream = screamId => disptach => {\r\n  axios\r\n    .get(\r\n      `https://us-central1-social-media-7f318.cloudfunctions.net/api/screams/${screamId}/like`\r\n    )\r\n    .then(res => {\r\n      disptach({ type: LIKE_SCREAM, payload: res.data });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const unlikeScream = screamId => disptach => {\r\n  axios\r\n    .get(\r\n      `https://us-central1-social-media-7f318.cloudfunctions.net/api/screams/${screamId}/unlike`\r\n    )\r\n    .then(res => {\r\n      disptach({ type: UNLIKE_SCREAM, payload: res.data });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const deleteScream = screamId => disptach => {\r\n  console.log(screamId);\r\n  axios\r\n    .delete(\r\n      `https://us-central1-social-media-7f318.cloudfunctions.net/api/screams/${screamId}`\r\n    )\r\n    .then(() => {\r\n      disptach({\r\n        type: DELETE_SCREAM,\r\n        payload: screamId\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getScream = screamId => dispatch => {\r\n  dispatch({\r\n    type: LOADING_UI\r\n  });\r\n\r\n  axios\r\n    .get(\r\n      `https://us-central1-social-media-7f318.cloudfunctions.net/api/screams/${screamId}`\r\n    )\r\n    .then(res => {\r\n      dispatch({\r\n        type: SET_SCREAM,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch({\r\n        type: STOP_LOADING\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const clearErrors = () => dispatch =>{\r\n  dispatch({\r\n    type:CLEAR_ERRORS\r\n  })\r\n}\r\n\r\nexport const submitComment = (commentData, screamId) => dispatch =>{\r\n    axios.post(`https://us-central1-social-media-7f318.cloudfunctions.net/api/screams/${screamId}/comment`, commentData)\r\n    .then(res => {\r\n      dispatch({\r\n        type:SUBMIT_COMMENT,\r\n        payload:res.data\r\n      })\r\n      dispatch(clearErrors())\r\n    })\r\n    .catch(err => {\r\n    dispatch({type : SET_ERRORS, \r\n    payload : err.response.data})\r\n    })\r\n}\r\n\r\n","export  const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER'\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM'; \r\nexport const DELETE_SCREAM = 'DELETE_SCREAM'\r\nexport const POST_SCREAM = 'POST_SCREAM'\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const STOP_LOADING = 'STOP_LOADING';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport MyButton from \"../../util/myButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { deleteScream } from \"../../redux/actions/dataActions\";\r\n\r\nclass DeleteScream extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  };\r\n\r\n  deleteScream = () => {\r\n    this.props.deleteScream(this.props.screamId);\r\n    this.setState({\r\n      open: false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <MyButton tip=\"Delete Scream\" onClick={this.handleOpen}>\r\n          <DeleteIcon color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>Are you sure you want to delete ?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.deleteScream} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { deleteScream })(DeleteScream);\r\n","import React , {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link } from 'react-router-dom';\r\nimport MyButton from '../../util/myButton';\r\nimport PropTypes from 'prop-types';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {likeScream, unlikeScream} from '../../redux/actions/dataActions';\r\n\r\nclass LikeButton extends Component{\r\n\r\n\t  likedScream = () =>{\r\n      \tif (this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.screamId)){\r\n        \treturn true\r\n      \t}\r\n        else{\r\n        \treturn false\r\n      \t}\r\n    }\r\n\r\n    likeScream = () =>{\r\n      this.props.likeScream(this.props.screamId)\r\n    }\r\n\r\n    unlikeScream = () =>{\r\n      this.props.unlikeScream(this.props.screamId)\r\n    }\r\n\r\n\trender(){\r\n\t\tconst {authenticated} = this.props.user;\r\n\t\tconst likeButton = !authenticated ? (\r\n\t\t\t<Link to = '/login'>\r\n              <MyButton tip = \"Like\">\r\n                <FavoriteBorderIcon color = \"primary\" />\r\n              </MyButton> \r\n            </Link>\r\n          ) : (\r\n              this.likedScream() ? (\r\n                <MyButton tip = \"unlike\" onClick = {this.unlikeScream}>\r\n                  <FavoriteIcon color = \"primary\" />\r\n                </MyButton>\r\n                ) : (\r\n                  <MyButton tip = \"like\" onClick = {this.likeScream}>\r\n                    <FavoriteBorderIcon color = \"primary\" />\r\n                  </MyButton>\r\n                )\r\n             )\r\n\t\treturn likeButton\r\n\t\t}\r\n\t} \r\n\r\n\r\nLikeButton.propTypes = {\r\n\tuser: PropTypes.object.isRequired,\r\n\tscreamId :PropTypes.string.isRequired,\r\n\tlikeScream : PropTypes.func.isRequired,\r\n\tunlikeScream: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n\tuser:state.user,\r\n\r\n})\r\nconst mapActionsToProps = {\r\n\tlikeScream, unlikeScream\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton)\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, Grid, Typography } from \"@material-ui/core\";\r\nimport dayjs from \"dayjs\";\r\nimport {Link} from 'react-router-dom';\r\nconst styles = {\r\n  commentImage: {\r\n    maxWidth: 100,\r\n    objectFit : \"cover\",\r\n    borderRadius: \"50%\",\r\n    height : 100\r\n  },\r\n\r\n  commentData:{\r\n      marginLeft: 60\r\n  },\r\n  visibleSeperator:{\r\n    widith : \"100%\",\r\n    marginBottom: 20,\r\n    borderBottom : \"1px solid rgba(0,0,0,0.1)\"\r\n},\r\ninvisibleSeperator:{\r\n    border :\"none\",\r\n    margin: 4\r\n}\r\n};\r\n\r\nclass Comments extends Component {\r\n  render() {\r\n    const { classes, comments } = this.props;\r\n\r\n    return (\r\n      <Grid container>\r\n        {comments ? (comments.map((comment, index) => {\r\n          const { body, createdAt, userImage, userHandle} = comment;\r\n          return (\r\n            <Fragment key={createdAt}>\r\n              <Grid item sm={12}>\r\n                <Grid container>\r\n                  <Grid item sm={2}>\r\n                    <img\r\n                      src={userImage}\r\n                      alt=\"user\"\r\n                      className={classes.commentImage}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={9}>\r\n                    <div className = {classes.commentData}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/user/${userHandle}`}\r\n                        color=\"primary\"\r\n                      >\r\n                        {userHandle}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format(\"h: mm a, MMMM DD YYYY\")}\r\n                      </Typography>\r\n                      <hr className={classes.invisibleSeperator} />\r\n                      <Typography variant=\"body1\">{body}</Typography>\r\n                      </div>\r\n                  </Grid>\r\n                 \r\n                </Grid>\r\n              </Grid>\r\n              {index !== comments.length -1 &&(\r\n                <hr className={classes.visibleSeperator} />\r\n              )}\r\n            </Fragment>\r\n          )\r\n        })) :null}\r\n       \r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nComments.propTypes = {\r\n  comments: PropTypes.array\r\n};\r\n\r\nexport default withStyles(styles)(Comments);\r\n","import React, { Component , Fragment} from 'react'\r\nimport PropTypes  from 'prop-types';\r\nimport {withStyles, TextField, Button,Grid} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {submitComment} from '../../redux/actions/dataActions'\r\n\r\nconst styles = {\r\n    button :{\r\n        mariginTop : 5\r\n    }\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            body: '', \r\n            errors : {} \r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProp) =>{\r\n        if (nextProp.UI.errors){\r\n            this.setState({\r\n                errors:nextProp.UI.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault()\r\n        let commentData = {\r\n            body : this.state.body\r\n        }\r\n         this.props.submitComment(commentData,this.props.screamId);\r\n         this.setState({\r\n             body : \"\",\r\n             errors : {}\r\n         })\r\n    } \r\n\r\n    handleChange = (event) =>{\r\n        this.setState({\r\n            body: event.target.value\r\n        })\r\n    }\r\n     \r\n    render() { \r\n        const {classes, authenticated} = this.props;\r\n        const errors = this.state.errors;\r\n        const commentMarkup = authenticated ? (\r\n            <Grid container>\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <TextField \r\n                    onChange = {this.handleChange} \r\n                    type = \"text\"\r\n                    name = \"body\"\r\n                    multiline\r\n                    row = \"3\"\r\n                    error = {errors.comment ? true : false}\r\n                    helperText = {errors.comment}\r\n                    value = {this.state.body}\r\n                    lable = \"Add comment\"\r\n                    placeholder = \"Enter your comment...\" \r\n                    fullWidth\r\n                   \r\n                    className = {classes.textField}\r\n                    />\r\n                    <Button type = \"submit\" \r\n                    onClick = {this.handleSubmit}\r\n                     color = \"primary\"\r\n                     variant = \"contained\"\r\n                     className = {classes.button}\r\n                    >Add comment</Button>\r\n                </form>\r\n            </Grid>\r\n            \r\n        ): null\r\n        return commentMarkup\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    screamId:PropTypes.string.isRequired,\r\n    submitComment :PropTypes.func.isRequired,\r\n    UI:PropTypes.object.isRequired,\r\n    authenticated:PropTypes.bool.isRequired\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    UI:state.UI,\r\n    authenticated:state.user.authenticated\r\n})\r\n \r\nexport default connect(mapStateToProps, {submitComment})(withStyles(styles)(CommentForm));","import React, { Component, Fragment } from 'react';\r\nimport {withStyles, Grid,Typography} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport MyButton from '../../util/myButton';\r\nimport dayjs from 'dayjs';\r\nimport {Link} from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport {getScream, clearErrors} from '../../redux/actions/dataActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LikeButton from './LikeButton';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Comments from './Comments'\r\nimport CommentForm from './CommentForm'\r\nconst styles = {\r\n\tinvisibleSeperator:{\r\n\t\tborder :\"none\",\r\n\t\tmargin: 4\r\n\t},\r\n\tprofileImage:{\r\n\t\tmaxWidth: 200,\r\n\t\theight:200,\r\n\t\tobjectFit :\"cover\", \r\n\t\tborderRadius :\"50%\"\r\n\t},\r\n\tdialogContent:{\r\n\t\tpadding : 20\r\n\t},\r\n\tcloseButton :{\r\n\t\tposition:\"absolute\",\r\n\t\tleft : \"90%\"\r\n\t},\r\n\r\n\tspinnerDiv :{\r\n\t\ttextAlign :\"center\",\r\n\t\tmarginBottom : 50,\r\n\t\tmarginTop : 50\r\n\t},\r\n\tvisibleSeperator:{\r\n\t\twidith : \"100%\",\r\n\t\tmarginBottom: 20,\r\n\t\tborder : \"1px solid rgba(0,0,0,0.1)\"\r\n\t}\r\n\t\r\n\r\n}\r\n\r\n\r\nclass ScreamDialog extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\topen:false,\r\n\t\t\toldPath: '',\r\n\t\t\tnewPath:''\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    if(this.props.openDialog){\r\n      this.handleOpen()\r\n    }\r\n  }\r\n\thandleOpen = () =>{\r\n\t\tconst {userHandle , screamId} = this.props;\r\n\t\tlet oldPath = window.location.pathname;\r\n\t\tlet newPath  = `/user/${userHandle}/scream/${screamId}`;\r\n\t\tif (oldPath === newPath){\r\n\t\t\toldPath = `/user/${userHandle}`\r\n\t\t}\r\n\t\twindow.history.pushState(null,null, newPath)\r\n\t\tthis.setState({\r\n\t\t\topen:true,\r\n\t\t\toldPath:oldPath,\r\n\t\t\tnewPath:newPath\r\n\t\t})\r\n\t\tthis.props.getScream(this.props.screamId)\r\n\t}\r\n\r\n\thandleClose = () =>{\r\n\t\twindow.history.pushState(null,null, this.state.oldPath)\r\n\t\tthis.setState({\r\n\t\t\topen:false\r\n\t\t})\r\n\t\tthis.props.clearErrors()\r\n\t}\r\n\trender(){\r\n\r\n\r\n \t\tconst {classes, scream :{screamId, body, createdAt, userHandle, likeCount, commentCount, userImage, comments}, UI:{loading}} = this.props;\r\n\t\t const dialogMarkup = loading ? (\r\n \t\t\t<div className = {classes.spinnerDiv}>\r\n \t\t\t<CircularProgress size = {200} color = \"primary\" thickness = {2}/>\r\n \t\t\t</div>\r\n \t\t\t):(<Fragment>\r\n \t\t\t\t<Grid container spacing = {6}>\r\n \t\t\t\t\t<Grid item sm = {5}>\r\n \t\t\t\t\t\t<img src = {userImage} alt = \"Profile\" className = {classes.profileImage}/>\r\n \t\t\t\t\t</Grid>\r\n \t\t\t\t\t<Grid item sm= {7}>\r\n\r\n \t\t\t\t\t\t<Typography variant = \"h5\" color = \"primary\" component = {Link} to = {`/user/${userHandle}`}>\r\n \t\t\t\t\t\t\t@{userHandle}\r\n \t\t\t\t\t\t</Typography>\r\n \t\t\t\t\t\t<hr className = {classes.invisibleSeperator} />\r\n \t\t\t\t\t\t<Typography color = \"textSecondary\" variant = \"body2\">\r\n \t\t\t\t\t\t\t{dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n \t\t\t\t\t\t</Typography>\r\n \t\t\t\t\t\t<hr className = {classes.invisibleSeperator} />\r\n \t\t\t\t\t\t<Typography variant = \"body1\">\r\n \t\t\t\t\t\t\t{body}\r\n \t\t\t\t\t\t</Typography>\r\n \t\t\t\t\t \t<LikeButton screamId = {screamId} />\r\n                \t\t<span>{likeCount} Likes</span>\r\n                \t\t<MyButton tip = \"comments\" >\r\n                  \t\t\t<ChatIcon color = \"primary\" />\r\n                \t\t</MyButton>\r\n\t\t\t\t\t\t<span>{commentCount} comments</span>\r\n \t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid> \r\n\t\t\t\t<hr className = {classes.visibleSeperator} />\r\n\t\t\t\t\r\n\t\t\t\t<Comments comments = {comments} />\r\n\t\t\t\t<CommentForm screamId = {screamId}/>\r\n\t\t\t\t</Fragment>\t\r\n \t\t\t)\r\n\t\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<MyButton onClick = {this.handleOpen} tip = \"Expand\" className = {classes.expandButton}>\r\n\t\t\t\t<UnfoldMoreIcon color = \"primary\" />\r\n\t\t\t</MyButton> \r\n\t\t\t<Dialog open = {this.state.open}\r\n\t\t\tfullWidth\r\n\t\t\tonClose = {this.handleClose}\r\n\t\t\tmaxWidth=\"sm\" >\r\n\t\t\t <MyButton tip = \"close\" onClick = {this.handleClose} tipClassName = {classes.closeButton}>\r\n\t\t\t\t\t\t  \t<CloseIcon />\r\n\t\t\t</MyButton> \r\n\t\t\t\t<DialogContent className = {classes.dialogContent}>\r\n\t\t\t\t\t{dialogMarkup}\r\n\t\t\t\t</DialogContent> \r\n\t\t\t</Dialog> \r\n\t\t</Fragment>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n\tgetScream : PropTypes.func.isRequired,\r\n\tclearErrors : PropTypes.func.isRequired,\r\n\tclasses:PropTypes.object.isRequired,\r\n\tscreamId:PropTypes.string.isRequired,\r\n\tuserHandle:PropTypes.string.isRequired,\r\n\tscream:PropTypes.object.isRequired,\r\n\tUI:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n\tscream : state.data.scream,\r\n\tUI:state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n\tgetScream,\r\n\tclearErrors\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog))\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles,Card, CardContent,CardMedia,Typography} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport {connect} from 'react-redux';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MyButton from '../../util/myButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\nimport LikeButton from './LikeButton'\r\nconst styles = {\r\n    card :{\r\n        display :'flex',\r\n        marginBottom : 20\r\n   },\r\n   image :{\r\n       minWidth : 200,\r\n       objectFit : 'cover'\r\n   },\r\n   content :{\r\n       padding:25\r\n   }\r\n\r\n}\r\n\r\nexport class Scream extends Component {\r\n\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime)\r\n        const {classes,\r\n         scream : {body, createdAt, userImage, userHandle, screamId, likeCount, commentCount}, user : {authenticated, credentials :{handle}}} = this.props\r\n        const deleteButton = authenticated && userHandle === handle ? (\r\n          <DeleteScream screamId = {screamId} />\r\n          ) :null\r\n       \r\n\r\n        return (\r\n          <Card className = {classes.card}>\r\n            <CardMedia image = {userImage} title = \"Profile Image\"  className = {classes.image}/>\r\n            <CardContent className = {classes.content}>\r\n                <Typography variant = \"h5\" color = 'primary' component = {Link} to = {`/users/${userHandle}`}>{userHandle}</Typography>\r\n                <Typography variant = \"body2\" color = \"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n                {deleteButton}\r\n                <Typography variant = \"body1\">{body}</Typography>\r\n                <LikeButton screamId = {screamId} />\r\n                <span>{likeCount} Likes</span>\r\n                <MyButton tip = \"comments\" >\r\n                  <ChatIcon color = \"primary\" />\r\n                </MyButton>\r\n                <span>{commentCount} comments</span>\r\n                <ScreamDialog screamId = {screamId} userHandle = {userHandle} openDialog = {this.props.openDialog}/>\r\n            </CardContent>\r\n          </Card>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user : state.user,\r\n}) \r\n\r\nScream.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  classes:PropTypes.object.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  openDialog:PropTypes.bool\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n","import {\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER, \r\n  LOADING_DATA,\r\n  SET_SCREAMS,\r\n  MARK_NOTIFICATIONS_READ\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const loginUser = (userData, history) => dispatch => {\r\n  dispatch({\r\n    type: LOADING_UI\r\n  });\r\n  axios\r\n    .post(\r\n      \"https://us-central1-social-media-7f318.cloudfunctions.net/api/login\",\r\n      userData\r\n    )\r\n    .then(res => {\r\n      setAuthorizationToken(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({\r\n        type: CLEAR_ERRORS\r\n      });\r\n      history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n      return;\r\n    });\r\n};\r\n\r\nexport const signUpUser = (userData, history) => dispatch => {\r\n  dispatch({\r\n    type: LOADING_UI\r\n  });\r\n  axios\r\n    .post(\r\n      \"https://us-central1-social-media-7f318.cloudfunctions.net/api/signup\",\r\n      userData\r\n    )\r\n    .then(res => {\r\n      setAuthorizationToken(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({\r\n        type: CLEAR_ERRORS\r\n      });\r\n\r\n      history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n      return;\r\n    });\r\n};\r\n\r\nexport const getUserData = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_USER\r\n  });\r\n  axios\r\n    .get(\"https://us-central1-social-media-7f318.cloudfunctions.net/api/user\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: SET_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n  localStorage.removeItem(\"FBIdToken\");\r\n  delete axios.defaults.headers.common[\"Authorization\"];\r\n  dispatch({\r\n    type: SET_UNAUTHENTICATED\r\n  });\r\n};\r\n\r\nexport const uploadImage = formData => dispatch => {\r\n  dispatch({\r\n    type: LOADING_USER\r\n  });\r\n  axios\r\n    .post(\r\n      \"https://us-central1-social-media-7f318.cloudfunctions.net/api/user/image\",\r\n      formData\r\n    )\r\n    .then(() => {\r\n      dispatch(getUserData());\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const editUserDetails = userDetails => dispatch => {\r\n  dispatch({\r\n    type: LOADING_USER\r\n  });\r\n  axios\r\n    .post(\r\n      \"https://us-central1-social-media-7f318.cloudfunctions.net/api/user\",\r\n      userDetails\r\n    )\r\n    .then(res => {\r\n      dispatch(getUserData());\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getUserDetails = (handle) => dispatch =>{\r\n    dispatch({\r\n      type :LOADING_DATA\r\n    })\r\n\r\n    axios.get(`https://us-central1-social-media-7f318.cloudfunctions.net/api/user/${handle}`)\r\n    .then (res => {\r\n      dispatch({\r\n        type:SET_SCREAMS,\r\n        payload:res.data.screams\r\n      })\r\n    })\r\n    .catch(err =>{\r\n      console.log(err)\r\n      dispatch({\r\n        type:SET_SCREAMS,\r\n        payload:null\r\n      })\r\n    })\r\n\r\n\r\n}\r\n\r\nexport const markNotificationsRead = (notificationIds) => dispatch =>{\r\n  axios.post(`https://us-central1-social-media-7f318.cloudfunctions.net/api/notifications`, notificationIds)\r\n  .then(() => {\r\n      dispatch({type:MARK_NOTIFICATIONS_READ})\r\n  })\r\n  .catch(err => {\r\n    console.log(err)\r\n  })\r\n}\r\nconst setAuthorizationToken = token => {\r\n  const FBIdToken = `Bearer ${token}`;\r\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\r\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { editUserDetails } from \"../../redux/actions/userActions\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Edit as EditIcon } from \"@material-ui/icons\";\r\nconst styles = {\r\n  button: {\r\n    color: \"primary\",\r\n    float: \"right\"\r\n  }\r\n};\r\n\r\nexport class EditDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      bio: \"\",\r\n      website: \"\",\r\n      location: \"\",\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n    this.mapUserCredentialsToSate(this.props.credentials);\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    let userDetails = {\r\n      bio: this.state.bio,\r\n      location: this.state.location,\r\n      website: this.state.website\r\n    };\r\n    this.props.editUserDetails(userDetails);\r\n    this.handleClose();\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    const { credentials } = this.props;\r\n    this.mapUserCredentialsToSate(credentials);\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  mapUserCredentialsToSate = credentials => {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : \"\",\r\n      location: credentials.location ? credentials.location : \"\",\r\n      website: credentials.website ? credentials.website : \"\"\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Tooltip placement=\"top\" title=\"Edit Profile\">\r\n          <IconButton onClick={this.handleOpen} className={classes.button}>\r\n            <EditIcon color=\"primary\" className={classes.button} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Dialog\r\n          open={this.state.open}\r\n          fullWidth\r\n          onClose={this.handleClose}\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>Edit your details</DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              <TextField\r\n                name=\"bio\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                label=\"Bio\"\r\n                placeholder=\"A short decription about yourself\"\r\n                className={classes.textField}\r\n                multiline\r\n                row=\"3\"\r\n                value={this.state.bio}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"location\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                className={classes.textField}\r\n                label=\"Location\"\r\n                placeholder=\"Enter youtr location\"\r\n                value={this.state.location}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"website\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                className={classes.textField}\r\n                label=\"Website\"\r\n                placeholder=\"Enter your website\"\r\n                fullWidth\r\n                value={this.state.website}\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.handleClose}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleSubmit}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  editUserDetails\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  credentials: state.user.credentials\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(EditDetails));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditDetails from \"./EditDetails\";\r\nimport {\r\n  Paper,\r\n  withStyles,\r\n  Link as MuiLink,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Tooltip,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport {\r\n  LocationOn,\r\n  Link as LinkIcon,\r\n  CalendarToday,\r\n  Edit as EditIcon\r\n} from \"@material-ui/icons\";\r\nimport dayjs from \"dayjs\";\r\nimport { uploadImage, logoutUser } from \"../../redux/actions/userActions\";\r\nimport ProtoTypes from \"prop-types\";\r\nconst styles = {\r\n  paper: {\r\n    padding: 20\r\n  },\r\n  profile: {\r\n    \"& .image-wrapper\": {\r\n      textAlign: \"center\",\r\n      position: \"relative\",\r\n      \"& button\": {\r\n        position: \"absolute\",\r\n        top: \"80%\",\r\n        left: \"70%\"\r\n      }\r\n    },\r\n    \"& .profile-image\": {\r\n      width: 200,\r\n      height: 200,\r\n      objectFit: \"cover\",\r\n      maxWidth: \"100%\",\r\n      borderRadius: \"50%\"\r\n    },\r\n    \"& .profile-details\": {\r\n      textAlign: \"center\",\r\n      \"& span, svg\": {\r\n        verticalAlign: \"middle\"\r\n      },\r\n      \"& a\": {\r\n        color: \"#00bcd4\"\r\n      }\r\n    },\r\n    \"& hr\": {\r\n      border: \"none\",\r\n      margin: \"0 0 10px 0\"\r\n    },\r\n    \"& svg.button\": {\r\n      \"&:hover\": {\r\n        cursor: \"pointer\"\r\n      }\r\n    }\r\n  },\r\n  buttons: {\r\n    textAlign: \"center\",\r\n    \"& a\": {\r\n      margin: \"20px 10px\"\r\n    }\r\n  }\r\n};\r\n\r\nexport class Profile extends Component {\r\n  handleInputChange = event => {\r\n    const image = event.target.files[0];\r\n    let formData = new FormData();\r\n    formData.append(\"image\", image, image.name);\r\n    this.props.uploadImage(formData);\r\n  };\r\n  handleEditPicture = () => {\r\n    let fileInput = document.getElementById(\"imageInput\");\r\n    fileInput.click();\r\n  };\r\n\r\n  handleLogoutClick = () => {\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      user: {\r\n        credentials: { handle, createdAt, bio, location, imgUrl, website },\r\n        loading,\r\n        authenticated\r\n      }\r\n    } = this.props;\r\n\r\n    let profileMarkup = !loading ? (\r\n      authenticated ? (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.profile}>\r\n            <div className=\"image-wrapper\">\r\n              <img src={imgUrl} className=\"profile-image\" alt=\"Profile\" />\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageInput\"\r\n                onChange={this.handleInputChange}\r\n                hidden=\"hidden\"\r\n              />\r\n              <Tooltip title=\"Edit Profile Image\" placement=\"top\">\r\n                <IconButton onClick={this.handleEditPicture}>\r\n                  <EditIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n            <hr />\r\n            <div className=\"profile-details\">\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/user/${handle}`}\r\n                variant=\"body2\"\r\n                color=\"primary\"\r\n              >\r\n                @{handle}\r\n              </MuiLink>\r\n              <hr />\r\n              {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n              {location && (\r\n                <Fragment>\r\n                  <LocationOn color=\"primary\" />\r\n                  <span>{location}</span>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n\r\n              {website && (\r\n                <Fragment>\r\n                  <LinkIcon color=\"primary\" />\r\n                  <a href={website} ref=\"noopener noreferrer\" target=\"_blank\">\r\n                    {\" \"}\r\n                    {website}\r\n                  </a>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              <CalendarToday color=\"primary\" />\r\n              <span>{dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={this.handleLogoutClick}\r\n                color=\"primary\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            </div>\r\n            <EditDetails />\r\n          </div>\r\n        </Paper>\r\n      ) : (\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            No profile found , please login\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/login\"\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              component={Link}\r\n              to=\"/signin\"\r\n            >\r\n              Signin\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      )\r\n    ) : (\r\n      <Fragment>\r\n        <CircularProgress color=\"primary\" size={30} />\r\n      </Fragment>\r\n    );\r\n\r\n    return profileMarkup;\r\n  }\r\n}\r\nProfile.propTypes = {\r\n  classes: ProtoTypes.object.isRequired,\r\n  logoutUser: ProtoTypes.func.isRequired,\r\n  uploadImage: ProtoTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapActionsToProps = { logoutUser, uploadImage };\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Profile));\r\n","import React, { Component } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Scream from \"../components/scream/Scream\";\r\nimport Profile from \"../components/Profile/Profile\";\r\nimport { getScreams } from \"../redux/actions/dataActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nexport class home extends Component {\r\n  componentDidMount() {\r\n    this.props.getScreams();\r\n  }\r\n  render() {\r\n    let { screams, loading } = this.props.data;\r\n    let recentScreamMarkup = !loading\r\n      ? screams.map((scream, index) => <Scream key={index} scream={scream} />)\r\n      :<p>LOADING.....</p>\r\n    return (\r\n      <Grid container spacing={10}>\r\n        <Grid item sm={8} xs={12}>\r\n          {recentScreamMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <Profile />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getScreams })(home);\r\n","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {\r\n  withStyles,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\nimport {signUpUser} from '../redux/actions/userActions'\r\n\r\nconst styles = {\r\n  form: {\r\n    textAlign: \"center\"\r\n  },\r\n  textField: {\r\n    margin: `10px auto 10px auto`\r\n  },\r\n  pageTitle: {\r\n    margin: `10px auto 10px auto`\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    position :'relative'\r\n  },\r\n  customError:{\r\n      color :'red',\r\n      fontSize :'0.8rem',\r\n      marginTop : 10\r\n  },\r\n  progress :{\r\n      position:'absolute'\r\n  }\r\n}\r\n\r\nexport class signup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword :\"\",\r\n      handle:\"\",\r\n      errors: {},\r\n      loading: false\r\n    };\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  this.setState({\r\n      loading : true\r\n  })\r\n   let newUserData = {\r\n       email:this.state.email,\r\n       password: this.state.password,\r\n       confirmPassword: this.state.confirmPassword,\r\n       handle: this.state.handle,\r\n   }\r\n    this.props.signUpUser(newUserData, this.props.history)\r\n   \r\n   }\r\n\r\n   componentWillReceiveProps(nextProps){\r\n     if(nextProps.UI.errors){\r\n       this.setState({\r\n         errors:nextProps.UI.errors\r\n       })\r\n     }\r\n   }\r\n  render() {\r\n    \r\n    const {UI:{loading}, classes } = this.props;\r\n    console.log(loading)\r\n    const {errors} = this.state;\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item m>\r\n          <Typography variant=\"h3\" className={classes.pageTitle}>\r\n            Signup\r\n          </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              helperText = {errors.email}\r\n              error = {errors.email ? true : false}\r\n              className={classes.textField}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              helperText = {errors.password}\r\n              error = {errors.password ? true : false}\r\n              className={classes.textField}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.confirmPassword}\r\n              id=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              helperText = {errors.confirmPassword}\r\n              error = {errors.confirmPassword ? true : false}\r\n              className={classes.textField}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"handle\"\r\n              type=\"handle\"\r\n              onChange={this.handleChange}\r\n              value={this.state.handle}\r\n              id=\"handle\"\r\n              label=\"handle\"\r\n              helperText = {errors.handle}\r\n              error = {errors.handle ? true : false}\r\n              className={classes.textField}\r\n              fullWidth\r\n            />\r\n            \r\n            {errors.general && (\r\n                <Typography variant = \"body2\" className = {classes.customError}>{errors.general}</Typography> \r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled = {loading}\r\n            >\r\n              Signup\r\n              {loading && (\r\n                  <CircularProgress className = {classes.progress} size = {30} />\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>Aready have an account ? login  <Link to = '/login'>here</Link></small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  user: state.user,\r\n  UI: state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n  signUpUser\r\n}\r\n\r\nsignup.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(signup))\r\n","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {loginUser} from '../redux/actions/userActions'\r\nimport {\r\n  withStyles,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  form: {\r\n    textAlign: \"center\"\r\n  },\r\n  textField: {\r\n    margin: `10px auto 10px auto`\r\n  },\r\n  pageTitle: {\r\n    margin: `10px auto 10px auto`\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    position :'relative'\r\n  },\r\n  customError:{\r\n      color :'red',\r\n      fontSize :'0.8rem',\r\n      marginTop : 10\r\n  },\r\n  progress :{\r\n      position:'absolute'\r\n  }\r\n}\r\n\r\nexport class login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n\r\n    };\r\n  }\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n   let userData = {\r\n       email:this.state.email,\r\n       password: this.state.password\r\n   }\r\n   this.props.loginUser(userData, this.props.history)\r\n \r\n   }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.UI.errors){\r\n      this.setState({\r\n        errors:nextProps.UI.errors\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let {errors} = this.state;\r\n    \r\n    const { classes } = this.props;\r\n    const { UI : {loading}} = this.props;\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item m>\r\n          <Typography variant=\"h3\" className={classes.pageTitle}>\r\n            Login\r\n          </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              name=\"email\"\r\n              type=\"email\"\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              helperText = {errors.email}\r\n              error = {errors.email ? true : false}\r\n              className={classes.textField}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              helperText = {errors.password}\r\n              error = {errors.password ? true : false}\r\n              className={classes.textField}\r\n              fullWidth\r\n            />\r\n            {errors.general && (\r\n                <Typography variant = \"body2\" className = {classes.customError}>{errors.general}</Typography> \r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled = {loading}\r\n            >\r\n              Login\r\n              {loading && (\r\n                  <CircularProgress className = {classes.progress} size = {30} />\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>don't have a account ? signup  <Link to = '/signup'>here</Link></small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nlogin.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = (state) =>({\r\n  user : state.user,\r\n  UI:state.UI\r\n})\r\n\r\nconst mapActionsToProps = {\r\n  loginUser\r\n}\r\nexport default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(login));\r\n","import React, { Component , Fragment} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport {Menu, MenuItem, IconButton, Tooltip, Typography, Badge} from '@material-ui/core';\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport {Favorite as FavoriteIcon} from '@material-ui/icons';\r\nimport {markNotificationsRead} from '../../redux/actions/userActions';\r\n\r\n\r\nclass Notifications extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            anchorEl : null\r\n        }\r\n    }\r\n    handleOpen = (event) =>{\r\n        this.setState({\r\n            anchorEl : event.target\r\n        })\r\n    }\r\n\r\n    handleClose = () =>{\r\n        this.setState({\r\n            anchorEl : null\r\n        })\r\n    }\r\n\r\n    onMenuOpened = () =>{\r\n        let notificationIds = this.props.notifications.filter(not => not.read == false).map(not => not.notificationId);\r\n        this.props.markNotificationsRead(notificationIds)\r\n    }\r\n\r\n    render() {\r\n         dayjs.extend(relativeTime)\r\n        let notificationIcon;\r\n        let notifications = this.props.notifications;\r\n        let anchorEl = this.state.anchorEl;\r\n        if (notifications && notifications.length > 0){\r\n            notifications.filter(not => not.read == false ).length > 0 ? (\r\n                notificationIcon = (\r\n                    <Badge badgeContent = {notifications.filter(not => not.read == false).length}\r\n                     color = \"secondary\">\r\n                         <NotificationsIcon />\r\n                    </Badge>\r\n                )\r\n            ) :(\r\n                notificationIcon = <NotificationsIcon />\r\n            )\r\n        }\r\n        else {\r\n            notificationIcon = <NotificationsIcon />\r\n        }\r\n\r\n        let notificationsMarkup =  (notifications && notifications.length > 0) ?\r\n            notifications.map(not => {\r\n                const verb = not.type === 'like'?'liked' : 'commented on';\r\n                const time = dayjs(not.createdAt).fromNow();\r\n                const iconColor = not.read ? \"primary\" : \"secondary\";\r\n                const icon = not.type === \"like\" ? (<FavoriteIcon color = {iconColor}  style = {{marginTop : 10}}/>) :\r\n                (<ChatIcon color = {iconColor}  style = {{marginTop : 10}}/>)\r\n                return (\r\n                    <MenuItem onClick = {this.handleClose} \r\n                    key = {not.createdAt}>\r\n                    {icon}\r\n                    <Typography component = {Link} \r\n                    variant = \"body1\" \r\n                    to ={`/user/${not.recipient}/scream/${not.screamId}`} \r\n                    >\r\n                    {`${not.sender} ${verb} on your scream ${time}`}\r\n                    </Typography>\r\n                    </MenuItem>\r\n                    )\r\n\r\n            }):(\r\n            <MenuItem onClick= {this.handleClose}>\r\n                You have no notifications\r\n            </MenuItem> )\r\n\r\n        \r\n\r\n    \r\n        return (\r\n            <Fragment>\r\n                <Tooltip placement = \"top\" title = \"notifications\">\r\n                    <IconButton aria-owns = {anchorEl ? 'simple-menu': undefined}\r\n                    aria-haspopup = \"true\"\r\n                    onClick = {this.handleOpen}>\r\n                    {notificationIcon}\r\n                    </IconButton> \r\n                </Tooltip>\r\n                <Menu\r\n                 anchorEl = {anchorEl}\r\n                 open = {Boolean(anchorEl)}\r\n                 onClose = {this.handleClose}\r\n                 onEntered = {this.onMenuOpened}\r\n                 >\r\n                 {notificationsMarkup}\r\n                 </Menu>\r\n\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nNotification.propTypes = {\r\n    markNotificationsRead : PropTypes.object.isRequired,\r\n    notifications:PropTypes.array.isRequired\r\n}\r\nconst mapStateToProps = state =>({\r\n    notifications: state.user.notifications\r\n})\r\nexport default connect(mapStateToProps, {markNotificationsRead})(Notifications)","import React, { Component, Fragment } from 'react';\r\nimport {withStyles} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { postScream } from \"../../redux/actions/dataActions\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport MyButton from '../../util/myButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst styles = {\r\n\tsubmitButton :{\r\n\t\tposition :'relative',\r\n\t\tmarginTop : 10,\r\n\t\tfloat:\"right\"\r\n\t},\r\n\tspinnerProgress:{\r\n\t\tposition:'absolute'\r\n\t},\r\n\tcloseButton :{\r\n\t\tposition:'absolute',\r\n\t\tleft :'91%',\r\n\t\ttop:\"6%\"\r\n\r\n\t}\r\n}\r\n\r\nclass PostScream  extends Component{\r\n\r\n\t \r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\topen:false,\r\n\t\t\tbody:'',\r\n\t\t\terrors: {}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpen = () =>{\r\n\t\tthis.setState({\r\n\t\t\topen : true\r\n\t\t})\r\n\t}\r\n\r\n\thandleClose = () =>{\r\n\t\tthis.setState({\r\n\t\t\topen : false,\r\n\t\t\terrors : '',\r\n\t\t\tbody : ''\r\n\t\t})\r\n\t\tconsole.log(\"state\",this.state)\r\n\t}\t\r\n\thandleChange = (event) =>{\r\n\t\tthis.setState({\r\n\t\t\tbody:event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (this.state.body.trim() == ''){\r\n\t\t\tlet errors = {body : \"body must not be empty\"}\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors:errors\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet newScream = {\r\n\t\t\tbody : this.state.body\r\n\t\t}\r\n\r\n\t\tthis.props.postScream(newScream)\r\n\t\tthis.setState({\r\n\t\t\terrors : {},\r\n\t\t\topen : false,\r\n\t\t\tbody : ''\r\n\t\t})\r\n\t\t\r\n\r\n\t}\r\n\r\n\tcomponentWillReceiveProps = (nextProps)=>{\r\n\t\tif (nextProps.UI.errors){\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors:nextProps.UI.errors\r\n\t\t\t})\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t\r\n\trender(){\r\n\t\tconst {errors} = this.state;\r\n\t\tconsole.log(errors)\r\n\t\tconst {classes, UI : {loading}} = this.props\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<MyButton tip = \"Post a scream\" onClick = {this.handleOpen}>\r\n\t\t\t\t\t<AddIcon color = \"primary\" />\r\n\t\t\t\t</MyButton>\t\r\n\t\t\t\t\t<Dialog open = {this.state.open}\r\n\t\t\t\t\t fullWidth\r\n\t\t\t\t\t  onClose = {this.handleClose}\r\n\t\t\t\t\t  maxWidth = \"sm\">\r\n\t\t\t\t\t\t  <MyButton tip = \"close\" onClick = {this.handleClose} tipClassName = {classes.closeButton}>\r\n\t\t\t\t\t\t  \t<CloseIcon />\r\n\t\t\t\t\t\t  </MyButton> \r\n\t\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\tPost a Scream\r\n\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname = \"body\"\r\n\t\t\t\t\t\t\t\tonChange = {this.handleChange}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.body}\r\n\t\t\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\t\t\tmultiline \r\n\t\t       \t\t\t\t    row = \"3\" \r\n\t\t\t\t\t\t\t\tplaceholder = \"Enter scream here\"\r\n\t\t\t\t\t\t\t\tlabel = \"Scream!!\"\r\n\t\t\t\t\t\t\t\terror = {errors.body ? true : false}\r\n\t\t\t\t\t\t\t\thelperText = {errors.body}\r\n\t\t\t\t\t\t\t\tid = \"body\"\r\n\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t\t<Button type = \"submit\"\r\n\t\t\t\t\t\t\t\tonClick = {this.handleSubmit}\r\n\t\t\t\t\t\t\t\tdisabled = {loading}\r\n\t\t\t\t\t\t\t\tvariant = \"contained\"\r\n\t\t\t\t\t\t\t\tcolor = \"primary\"\r\n\t\t\t\t\t\t\t\tclassName = {classes.submitButton}\r\n\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t submit\r\n\t\t\t\t\t\t\t\t\t{loading && (\r\n\t\t\t\t\t\t\t\t\t\t<CircularProgress className = {classes.spinnerProgress} size = {30} />\t\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</form>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t\r\n\t\t\t</Fragment>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n\tUI : state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {postScream} )(withStyles(styles)(PostScream))","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Tooltip,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Notifications from './Notifications'\r\nimport PostScream from \"../scream/PostScream\";\r\nexport class Navbar extends Component {\r\n  handlePostScream = () => {\r\n    console.log(\"post scream clicked\");\r\n  };\r\n  render() {\r\n    const { authenticated } = this.props;\r\n\r\n    return (\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar className=\"nav-container\">\r\n          {authenticated ? (\r\n            <Fragment>\r\n              <PostScream />\r\n              <Notifications />\r\n              <Tooltip title=\"Home\" placement=\"top\">\r\n                <IconButton onClick={this.handlePostScream} component = {Link} to = \"/\">\r\n                  <HomeIcon/>\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button color=\"inherit\" component={Link} to=\"/\">\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                Login\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/signup\">\r\n                Signup\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nAuthRoute.propTypes = {\r\n  user: PropTypes.object\r\n};\r\nconst mapStateToProps = state => ({ authenticated: state.user.authenticated });\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import {SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, POST_SCREAM,SET_SCREAM, SUBMIT_COMMENT} from '../types'\r\n\r\nconst initialState = {\r\n\tscreams: [], \r\n\tloading : false,\r\n\tscream : {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase SET_SCREAMS:\r\n\t\t\treturn {\r\n\t\t\t\t...state ,\r\n\t\t\t\tscreams : action.payload,\r\n\t\t\t\tloading:false\r\n\t\t\t}\r\n\t\tcase SET_SCREAM :\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tscream : action.payload\r\n\t\t\t}\t\r\n\t\tcase LOADING_DATA :\r\n\t\t\treturn {\r\n\t\t\t\t...state, loading:true\r\n\t\t\t}\r\n\t\tcase LIKE_SCREAM :\r\n\t\tcase UNLIKE_SCREAM :\r\n\t\t\tlet index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId)\t\r\n\t\t\tstate.screams[index] = action.payload\t\r\n\t\t\tif(state.scream.screamId === action.payload.screamId){\r\n\t\t\t\tstate.scream = action.payload\r\n\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state\r\n\t\t\t\t}\r\n\t\tcase DELETE_SCREAM :\r\n\t\t\tlet i = state.screams.findIndex(scream => scream.screamId === action.payload)\t\r\n\t\t\tstate.screams.splice(i,1)\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t}\t\r\n\t\tcase POST_SCREAM:\r\n\t\t\treturn {\r\n\t\t\t\t...state, \r\n\t\t\t\tscreams :[action.payload, ...state.screams]\r\n\t\t\t}\t\r\n\t\t\tcase SUBMIT_COMMENT:\r\n\t\t\t\tlet indexOfState = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\r\n\t\t\t\tstate.scream.comments.push(action.payload) \r\n\t\t\t\tstate.scream.commentCount += 1;\r\n\t\t\t\tstate.screams[indexOfState] = state.scream\r\n\r\n\t\t\t\treturn state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n} ","import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  MARK_NOTIFICATIONS_READ\r\n} from \"../types\";\r\nconst initialState = {\r\n  authenticated: false,\r\n  loading: false,\r\n  credentials: {},\r\n  likes: [],\r\n  notifications: []\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: true\r\n      };\r\n    case SET_UNAUTHENTICATED:\r\n      return initialState;\r\n    case SET_USER:\r\n      return {\r\n        loading: false,\r\n        authenticated: true,\r\n        ...action.payload\r\n      };\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LIKE_SCREAM :\r\n      return {\r\n        ...state,\r\n        likes : [\r\n        ...state.likes,\r\n        {\r\n          userHandle: state.credentials.handle,\r\n          screamId : action.payload.screamId\r\n        }\r\n        ]\r\n      }\r\n    case UNLIKE_SCREAM :\r\n      return {\r\n        ...state,\r\n        likes : state.likes.filter(scream => scream.screamId !== action.payload.screamId)\r\n      }    \r\n    case MARK_NOTIFICATIONS_READ :\r\n      state.notifications.forEach(notification => notification.read = true)  \r\n      return {\r\n        ...state\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {LOADING_UI,CLEAR_ERRORS, SET_ERRORS,STOP_LOADING } from '../types';\r\n\r\nconst intialState = {\r\n    loading : false,\r\n    errors : {}\r\n}\r\n\r\nexport default function(state = intialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading :false,\r\n                errors:action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: {}\r\n            }  \r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                errors: {}\r\n            }   \r\n        case STOP_LOADING:\r\n        return {\r\n            ...state, loading :false\r\n        }     \r\n        default :\r\n            return state\r\n    }   \r\n} ","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport uiReducer from \"./reducers/uiReducer\";\r\n\r\nconst intialState = {};\r\nconst middleware = [thunk];\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  data: dataReducer,\r\n  UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  intialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React , {Fragment, Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link as MuiLink , withStyles,Paper, Typography} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs'\r\nimport {\r\n  LocationOn,\r\n  Link as LinkIcon,\r\n  CalendarToday,\r\n  Edit as EditIcon\r\n} from \"@material-ui/icons\";\r\nconst styles = {\r\n  paper: {\r\n    padding: 20\r\n  },\r\n  profile: {\r\n    \"& .image-wrapper\": {\r\n      textAlign: \"center\",\r\n      position: \"relative\",\r\n    },\r\n    \"& .profile-image\": {\r\n      width: 200,\r\n      height: 200,\r\n      objectFit: \"cover\",\r\n      maxWidth: \"100%\",\r\n      borderRadius: \"50%\"\r\n    },\r\n    \"& .profile-details\": {\r\n      textAlign: \"center\",\r\n      \"& span, svg\": {\r\n        verticalAlign: \"middle\"\r\n      },\r\n      \"& a\": {\r\n        color: \"#00bcd4\"\r\n      }\r\n    },\r\n    \"& hr\": {\r\n      border: \"none\",\r\n      margin: \"0 0 10px 0\"\r\n    },\r\n    \"& svg.button\": {\r\n      \"&:hover\": {\r\n        cursor: \"pointer\"\r\n      }\r\n    }\r\n  },\r\n };\r\nclass StaticProfile extends Component{\r\n\t\r\n\r\n\trender(){\r\n\r\n\r\n\tconst {classes, profile : {createdAt, handle, imgUrl, bio, website, location}} = this.props\r\n\treturn (\r\n\t\t<Paper className={classes.paper}>\r\n          <div className={classes.profile}>\r\n            <div className=\"image-wrapper\">\r\n              <img src={imgUrl} className=\"profile-image\" alt=\"Profile\" />\r\n            </div>\r\n            <hr />\r\n            <div className=\"profile-details\">\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/user/${handle}`}\r\n                variant=\"body2\"\r\n                color=\"primary\"\r\n              >\r\n                @{handle}\r\n              </MuiLink>\r\n              <hr />\r\n              {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n              {location && (\r\n                <Fragment>\r\n                  <LocationOn color=\"primary\" />\r\n                  <span>{location}</span>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n\r\n              {website && (\r\n                <Fragment>\r\n                  <LinkIcon color=\"primary\" />\r\n                  <a href={website} ref=\"noopener noreferrer\" target=\"_blank\">\r\n                    {\" \"}\r\n                    {website}\r\n                  </a>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              <CalendarToday color=\"primary\" />\r\n              <span>{dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n\t\t) \r\n\t\t}\r\n    }\r\n\r\nStaticProfile.propTypes = {\r\n\tclasses : PropTypes.object.isRequired,\r\n\tprofile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile)\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios'\r\nimport Scream from '../components/scream/Scream';\r\nimport {Grid} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {getUserDetails} from '../redux/actions/userActions';\r\nimport StaticProfile from '../components/Profile/StaticProfile'\r\n\r\n\r\n class user extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            profile : null, \r\n            screamIdParam : null\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const handle = this.props.match.params.handle;\r\n        const screamIdParam = this.props.match.params.screamId\r\n        if(screamIdParam) this.setState({screamIdParam : screamIdParam})\r\n       this.props.getUserDetails(handle);\r\n        axios.get(`https://us-central1-social-media-7f318.cloudfunctions.net/api/user/${handle}`)\r\n        .then(res => {\r\n                 this.setState({\r\n                profile: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const {data:{screams, loading}} = this.props;\r\n        const {screamIdParam} = this.state;\r\n        const screamMarkup = loading ? (<p>Loading...</p>):\r\n            screams === null ? (<p>No Screams Posted by user</p>):!screamIdParam ? (\r\n                screams.map(scream => <Scream key = {scream.screamId} scream = {scream}/>)\r\n            ):(\r\n                screams.map(scream =>{\r\n                    if(scream.screamId !== screamIdParam){\r\n                        return <Scream key = {scream.screamId} scream = {scream}/>\r\n                    }\r\n                    else {\r\n                        return <Scream key = {scream.screamId} scream = {scream} openDialog/>\r\n                    }\r\n                })\r\n            )\r\n        \r\n        return (\r\n            \r\n            <Grid container spacing = {10}>\r\n            <Grid item sm = {8} xs = {12}>\r\n            {screamMarkup}\r\n            </Grid>\r\n            <Grid item sm = {4} xs = {12}>\r\n                {this.state.profile == null ? (<p>Loading Profile....</p>) : (\r\n                    <StaticProfile profile = {this.state.profile} />)}\r\n            </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    data:PropTypes.object.isRequired,\r\n    getUserDetails:PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    data : state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserDetails})(user)","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport home from \"./pages/home\";\r\nimport signup from \"./pages/signup\";\r\nimport login from \"./pages/login\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport themeFile from \"./util/theme\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport AuthRoute from \"./util/AuthRoute\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport {getUserData, logoutUser} from './redux/actions/userActions';\r\nimport {SET_AUTHENTICATED} from './redux/types';\r\nimport axios from 'axios';\r\nimport user from './pages/user'\r\n\r\nconst theme = createMuiTheme(themeFile);\r\n\r\nlet token = localStorage.FBIdToken;\r\nif (token) {\r\n  let decodedToken = jwtDecode(token);\r\n  if ((decodedToken.exp * 1000) < Date.now()) {\r\n    store.dispatch(logoutUser());\r\n    window.location.href = '/login'\r\n  } else {\r\n    store.dispatch({\r\n      type :SET_AUTHENTICATED\r\n    })\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n    store.dispatch(getUserData())\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Navbar />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={home}></Route>\r\n              <AuthRoute\r\n                exact\r\n                path= \"/signup\"\r\n                component={signup}\r\n              />\r\n              <AuthRoute\r\n                exact\r\n                path=\"/login\"\r\n                component={login}\r\n              />\r\n              <Route exact path =\"/user/:handle\" component = {user}></Route>\r\n              <Route exact path =\"/user/:handle/scream/:screamId\" component = {user}></Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n  palette: {\r\n    primary: {\r\n      light: \"#33c9dc\",\r\n      main: \"#00bcd4\",\r\n      dark: \"#008394\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: {\r\n      light: \"#ff6333\",\r\n      main: \"#ff3d00\",\r\n      dark: \"#b22a00\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    typography: {\r\n      useNextVariants: true\r\n    }\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}